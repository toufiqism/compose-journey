package com.sol.appscheduler.receiver

import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import androidx.work.OneTimeWorkRequestBuilder
import androidx.work.WorkManager
import androidx.work.workDataOf
import com.sol.appscheduler.worker.StatusUpdateWorker
import com.sol.appscheduler.database.AppDatabase
import kotlinx.coroutines.runBlocking

/**
 * BroadcastReceiver for handling alarm triggers
 * Launches the target app and updates schedule status
 */
class AlarmReceiver : BroadcastReceiver() {
    override fun onReceive(context: Context, intent: Intent) {
        val packageName = intent.getStringExtra("package_name") ?: return
        val scheduleId = intent.getIntExtra("schedule_id", -1)

        // Check schedule status before launching
        val schedule = runBlocking {
            AppDatabase.getInstance(context).scheduleDao().getById(scheduleId)
        }

        if (schedule == null || schedule.isCompleted) {
            return  // Don't launch if already completed or invalid schedule
        }

        // Launch target app
        context.packageManager.getLaunchIntentForPackage(packageName)?.let {
            it.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)
            context.startActivity(it)
        }

        // Update schedule status
        val workRequest = OneTimeWorkRequestBuilder<StatusUpdateWorker>()
            .setInputData(workDataOf("schedule_id" to scheduleId))
            .build()
        
        WorkManager.getInstance(context).enqueue(workRequest)
    }
} 